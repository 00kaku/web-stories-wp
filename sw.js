!function(e){var t={};function __webpack_require__(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,__webpack_require__),s.l=!0,s.exports}__webpack_require__.m=e,__webpack_require__.c=t,__webpack_require__.d=function(e,t,r){__webpack_require__.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},__webpack_require__.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.t=function(e,t){if(1&t&&(e=__webpack_require__(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(__webpack_require__.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)__webpack_require__.d(r,s,function(t){return e[t]}.bind(null,s));return r},__webpack_require__.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return __webpack_require__.d(t,"a",t),t},__webpack_require__.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s=4)}([function(e,t,r){"use strict";try{self["workbox:precaching:6.1.5"]&&_()}catch(e){}},function(e,t,r){"use strict";try{self["workbox:core:6.1.5"]&&_()}catch(e){}},function(e,t,r){"use strict";try{self["workbox:routing:6.1.5"]&&_()}catch(e){}},function(e,t,r){"use strict";try{self["workbox:strategies:6.1.5"]&&_()}catch(e){}},function(e,t,r){"use strict";r.r(t);r(1);const s=(e,...t)=>{let r=e;return t.length>0&&(r+=` :: ${JSON.stringify(t)}`),r};class WorkboxError_WorkboxError extends Error{constructor(e,t){super(s(e,t)),this.name=e,this.details=t}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[a.prefix,e,a.suffix].filter((e=>e&&e.length>0)).join("-"),o=e=>e||n(a.precache),c=e=>e||n(a.runtime);function i(e,t){const r=t();return e.waitUntil(r),r}r(0);function h(e){if(!e)throw new WorkboxError_WorkboxError("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:t,url:r}=e;if(!r)throw new WorkboxError_WorkboxError("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(r,location.href);return{cacheKey:e.href,url:e.href}}const s=new URL(r,location.href),a=new URL(r,location.href);return s.searchParams.set("__WB_REVISION__",t),{cacheKey:s.href,url:a.href}}class PrecacheInstallReportPlugin{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:r})=>{if("install"===e.type){const e=t.originalRequest.url;r?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return r}}}class PrecacheCacheKeyPlugin{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const r=t&&t.cacheKey||this._precacheController.getCacheKeyForURL(e.url);return r?new Request(r):e},this._precacheController=e}}let l;async function u(e,t){let r=null;if(e.url){r=new URL(e.url).origin}if(r!==self.location.origin)throw new WorkboxError_WorkboxError("cross-origin-copy-response",{origin:r});const s=e.clone(),a={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},n=t?t(a):a,o=function(){if(void 0===l){const e=new Response("");if("body"in e)try{new Response(e.body),l=!0}catch(e){l=!1}l=!1}return l}()?s.body:await s.blob();return new Response(o,n)}function f(e,t){const r=new URL(e);for(const e of t)r.searchParams.delete(e);return r.href}class Deferred{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const d=new Set;r(3);function p(e){return"string"==typeof e?new Request(e):e}class StrategyHandler_StrategyHandler{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new Deferred,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let r=p(e);if("navigate"===r.mode&&t instanceof FetchEvent&&t.preloadResponse){const e=await t.preloadResponse;if(e)return e}const s=this.hasCallback("fetchDidFail")?r.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))r=await e({request:r.clone(),event:t})}catch(e){throw new WorkboxError_WorkboxError("plugin-error-request-will-fetch",{thrownError:e})}const a=r.clone();try{let e;e=await fetch(r,"navigate"===r.mode?void 0:this._strategy.fetchOptions);for(const r of this.iterateCallbacks("fetchDidSucceed"))e=await r({event:t,request:a,response:e});return e}catch(e){throw s&&await this.runCallbacks("fetchDidFail",{error:e,event:t,originalRequest:s.clone(),request:a.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),r=t.clone();return this.waitUntil(this.cachePut(e,r)),t}async cacheMatch(e){const t=p(e);let r;const{cacheName:s,matchOptions:a}=this._strategy,n=await this.getCacheKey(t,"read"),o={...a,cacheName:s};r=await caches.match(n,o);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))r=await e({cacheName:s,matchOptions:a,cachedResponse:r,request:n,event:this.event})||void 0;return r}async cachePut(e,t){const r=p(e);var s;await(s=0,new Promise((e=>setTimeout(e,s))));const a=await this.getCacheKey(r,"write");if(!t)throw new WorkboxError_WorkboxError("cache-put-with-no-response",{url:(n=a.url,new URL(String(n),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var n;const o=await this._ensureResponseSafeToCache(t);if(!o)return!1;const{cacheName:c,matchOptions:i}=this._strategy,h=await self.caches.open(c),l=this.hasCallback("cacheDidUpdate"),u=l?await async function(e,t,r,s){const a=f(t.url,r);if(t.url===a)return e.match(t,s);const n={...s,ignoreSearch:!0},o=await e.keys(t,n);for(const t of o)if(a===f(t.url,r))return e.match(t,s)}(h,a.clone(),["__WB_REVISION__"],i):null;try{await h.put(a,l?o.clone():o)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of d)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:c,oldResponse:u,newResponse:o.clone(),request:a,event:this.event});return!0}async getCacheKey(e,t){if(!this._cacheKeys[t]){let r=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))r=p(await e({mode:t,request:r,event:this.event,params:this.params}));this._cacheKeys[t]=r}return this._cacheKeys[t]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const r of this.iterateCallbacks(e))await r(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const r=this._pluginStateMap.get(t),s=s=>{const a={...s,state:r};return t[e](a)};yield s}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve()}async _ensureResponseSafeToCache(e){let t=e,r=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,r=!0,!t)break;return r||t&&200!==t.status&&(t=void 0),t}}class PrecacheStrategy_PrecacheStrategy extends class Strategy_Strategy{constructor(e={}){this.cacheName=c(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,r="string"==typeof e.request?new Request(e.request):e.request,s="params"in e?e.params:void 0,a=new StrategyHandler_StrategyHandler(this,{event:t,request:r,params:s}),n=this._getResponse(a,r,t);return[n,this._awaitComplete(n,a,r,t)]}async _getResponse(e,t,r){let s;await e.runCallbacks("handlerWillStart",{event:r,request:t});try{if(s=await this._handle(t,e),!s||"error"===s.type)throw new WorkboxError_WorkboxError("no-response",{url:t.url})}catch(a){for(const n of e.iterateCallbacks("handlerDidError"))if(s=await n({error:a,event:r,request:t}),s)break;if(!s)throw a}for(const a of e.iterateCallbacks("handlerWillRespond"))s=await a({event:r,request:t,response:s});return s}async _awaitComplete(e,t,r,s){let a,n;try{a=await e}catch(n){}try{await t.runCallbacks("handlerDidRespond",{event:s,request:r,response:a}),await t.doneWaiting()}catch(e){n=e}if(await t.runCallbacks("handlerDidComplete",{event:s,request:r,response:a,error:n}),t.destroy(),n)throw n}}{constructor(e={}){e.cacheName=o(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(PrecacheStrategy_PrecacheStrategy.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const r=await t.cacheMatch(e);return r||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let r;if(!this._fallbackToNetwork)throw new WorkboxError_WorkboxError("missing-precache-entry",{cacheName:this.cacheName,url:e.url});return r=await t.fetch(e),r}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();const r=await t.fetch(e);if(!await t.cachePut(e,r.clone()))throw new WorkboxError_WorkboxError("bad-precaching-response",{url:e.url,status:r.status});return r}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[r,s]of this.plugins.entries())s!==PrecacheStrategy_PrecacheStrategy.copyRedirectedCacheableResponsesPlugin&&(s===PrecacheStrategy_PrecacheStrategy.defaultPrecacheCacheabilityPlugin&&(e=r),s.cacheWillUpdate&&t++);0===t?this.plugins.push(PrecacheStrategy_PrecacheStrategy.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}PrecacheStrategy_PrecacheStrategy.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},PrecacheStrategy_PrecacheStrategy.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await u(e):e};class PrecacheController_PrecacheController{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:r=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new PrecacheStrategy_PrecacheStrategy({cacheName:o(e),plugins:[...t,new PrecacheCacheKeyPlugin({precacheController:this})],fallbackToNetwork:r}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const t=[];for(const r of e){"string"==typeof r?t.push(r):r&&void 0===r.revision&&t.push(r.url);const{cacheKey:e,url:s}=h(r),a="string"!=typeof r&&r.revision?"reload":"default";if(this._urlsToCacheKeys.has(s)&&this._urlsToCacheKeys.get(s)!==e)throw new WorkboxError_WorkboxError("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(s),secondEntry:e});if("string"!=typeof r&&r.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==r.integrity)throw new WorkboxError_WorkboxError("add-to-cache-list-conflicting-integrities",{url:s});this._cacheKeysToIntegrities.set(e,r.integrity)}if(this._urlsToCacheKeys.set(s,e),this._urlsToCacheModes.set(s,a),t.length>0){const e=`Workbox is precaching URLs without revision info: ${t.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return i(e,(async()=>{const t=new PrecacheInstallReportPlugin;this.strategy.plugins.push(t);for(const[t,r]of this._urlsToCacheKeys){const s=this._cacheKeysToIntegrities.get(r),a=this._urlsToCacheModes.get(t),n=new Request(t,{integrity:s,cache:a,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:r},request:n,event:e}))}const{updatedURLs:r,notUpdatedURLs:s}=t;return{updatedURLs:r,notUpdatedURLs:s}}))}activate(e){return i(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),r=new Set(this._urlsToCacheKeys.values()),s=[];for(const a of t)r.has(a.url)||(await e.delete(a),s.push(a.url));return{deletedURLs:s}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,r=this.getCacheKeyForURL(t);if(r){return(await self.caches.open(this.strategy.cacheName)).match(r)}}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new WorkboxError_WorkboxError("non-precached-url",{url:e});return r=>(r.request=new Request(e),r.params={cacheKey:t,...r.params},this.strategy.handle(r))}}let _;const y=()=>(_||(_=new PrecacheController_PrecacheController),_);r(2);const g=e=>e&&"object"==typeof e?e:{handle:e};class Route_Route{constructor(e,t,r="GET"){this.handler=g(t),this.match=e,this.method=r}setCatchHandler(e){this.catchHandler=g(e)}}class RegExpRoute_RegExpRoute extends Route_Route{constructor(e,t,r){super((({url:t})=>{const r=e.exec(t.href);if(r&&(t.origin===location.origin||0===r.index))return r.slice(1)}),t,r)}}class Router_Router{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",(e=>{const{request:t}=e,r=this.handleRequest({request:t,event:e});r&&e.respondWith(r)}))}addCacheListener(){self.addEventListener("message",(e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data;0;const r=Promise.all(t.urlsToCache.map((t=>{"string"==typeof t&&(t=[t]);const r=new Request(...t);return this.handleRequest({request:r,event:e})})));e.waitUntil(r),e.ports&&e.ports[0]&&r.then((()=>e.ports[0].postMessage(!0)))}}))}handleRequest({request:e,event:t}){const r=new URL(e.url,location.href);if(!r.protocol.startsWith("http"))return void 0;const s=r.origin===location.origin,{params:a,route:n}=this.findMatchingRoute({event:t,request:e,sameOrigin:s,url:r});let o=n&&n.handler;const c=e.method;if(!o&&this._defaultHandlerMap.has(c)&&(o=this._defaultHandlerMap.get(c)),!o)return void 0;let i;try{i=o.handle({url:r,request:e,event:t,params:a})}catch(e){i=Promise.reject(e)}const h=n&&n.catchHandler;return i instanceof Promise&&(this._catchHandler||h)&&(i=i.catch((async s=>{if(h){0;try{return await h.handle({url:r,request:e,event:t,params:a})}catch(e){s=e}}if(this._catchHandler)return this._catchHandler.handle({url:r,request:e,event:t});throw s}))),i}findMatchingRoute({url:e,sameOrigin:t,request:r,event:s}){const a=this._routes.get(r.method)||[];for(const n of a){let a;const o=n.match({url:e,sameOrigin:t,request:r,event:s});if(o)return a=o,(Array.isArray(o)&&0===o.length||o.constructor===Object&&0===Object.keys(o).length||"boolean"==typeof o)&&(a=void 0),{route:n,params:a}}return{}}setDefaultHandler(e,t="GET"){this._defaultHandlerMap.set(t,g(e))}setCatchHandler(e){this._catchHandler=g(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new WorkboxError_WorkboxError("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(!(t>-1))throw new WorkboxError_WorkboxError("unregister-route-route-not-registered");this._routes.get(e.method).splice(t,1)}}let w;function b(e,t,r){let s;if("string"==typeof e){const a=new URL(e,location.href);0;s=new Route_Route((({url:e})=>e.href===a.href),t,r)}else if(e instanceof RegExp)s=new RegExpRoute_RegExpRoute(e,t,r);else if("function"==typeof e)s=new Route_Route(e,t,r);else{if(!(e instanceof Route_Route))throw new WorkboxError_WorkboxError("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});s=e}return(w||(w=new Router_Router,w.addFetchListener(),w.addCacheListener()),w).registerRoute(s),s}class PrecacheRoute_PrecacheRoute extends Route_Route{constructor(e,t){super((({request:r})=>{const s=e.getURLsToCacheKeys();for(const e of function*(e,{ignoreURLParametersMatching:t=[/^utm_/,/^fbclid$/],directoryIndex:r="index.html",cleanURLs:s=!0,urlManipulation:a}={}){const n=new URL(e,location.href);n.hash="",yield n.href;const o=function(e,t=[]){for(const r of[...e.searchParams.keys()])t.some((e=>e.test(r)))&&e.searchParams.delete(r);return e}(n,t);if(yield o.href,r&&o.pathname.endsWith("/")){const e=new URL(o.href);e.pathname+=r,yield e.href}if(s){const e=new URL(o.href);e.pathname+=".html",yield e.href}if(a){const e=a({url:n});for(const t of e)yield t.href}}(r.url,t)){const t=s.get(e);if(t)return{cacheKey:t}}}),e.strategy)}}var R;(function(e){y().precache(e)})([{'revision':'ec3b00564dc9b34fa2093383c725b399','url':'assets/css/edit-story-rtl.css'},{'revision':'ec3b00564dc9b34fa2093383c725b399','url':'assets/css/edit-story.css'},{'revision':'aaad1aac58bc724881035afcefcb28d4','url':'assets/css/vendors-edit-story-rtl.css'},{'revision':'aaad1aac58bc724881035afcefcb28d4','url':'assets/css/vendors-edit-story.css'},{'revision':null,'url':'assets/js/chunk-fonts-11c03fa35a1a747f2de9.js'},{'revision':null,'url':'assets/js/chunk-web-stories-template-0-d9333c633448fb26ccab.js'},{'revision':null,'url':'assets/js/chunk-web-stories-template-1-04c0bff4e3ea473e1640.js'},{'revision':null,'url':'assets/js/chunk-web-stories-template-2-e58e0aea9d5f85fb827c.js'},{'revision':null,'url':'assets/js/chunk-web-stories-template-3-3fbdf8f6512328ce463f.js'},{'revision':null,'url':'assets/js/chunk-web-stories-template-4-0e388964ce7bf2091f3b.js'},{'revision':null,'url':'assets/js/chunk-web-stories-template-5-6edba053365680fa9a23.js'},{'revision':null,'url':'assets/js/chunk-web-stories-template-6-ff8353ca34d70abd7fa3.js'},{'revision':null,'url':'assets/js/chunk-web-stories-template-7-e979bcb544831e1727e2.js'},{'revision':null,'url':'assets/js/chunk-web-stories-textset-0-04e4650aa5439f212f06.js'},{'revision':null,'url':'assets/js/chunk-web-stories-textset-1-de947fb95e0fecd8c043.js'},{'revision':null,'url':'assets/js/chunk-web-stories-textset-2-1720b573f02b0cc84af0.js'},{'revision':null,'url':'assets/js/chunk-web-stories-textset-3-690585005c4cd34d2a07.js'},{'revision':null,'url':'assets/js/chunk-web-stories-textset-4-a98f95541be5fb479085.js'},{'revision':null,'url':'assets/js/chunk-web-stories-textset-5-12fdc55ac124f4ead0be.js'},{'revision':null,'url':'assets/js/chunk-web-stories-textset-6-18358259c2d00e1dacf5.js'},{'revision':null,'url':'assets/js/chunk-web-stories-textset-7-f027137d592c8b1707d5.js'},{'revision':'4cbebd7839b1c50141c320078e1e2038','url':'assets/js/edit-story.js'},{'revision':null,'url':'assets/js/vendors-chunk-ffmpeg-74220a71e139b22c7bd2.js'},{'revision':null,'url':'assets/js/vendors-edit-story-f19fe76e36caa0178c0d.js'},{'revision':'8962cbc0005b82cb34dc2ffc76cce05d','url':'favicon.ico'},{'revision':'8a97c1f07901bcc72d8aab3ff0abc368','url':'index.html'},{'revision':'0d1cd8008228a355b74cc4d62ccf9ae4','url':'logo192.png'},{'revision':'e04f5eff867b28e3427a0c3f28287562','url':'logo512.png'},{'revision':'5c07260e524133371dbe998c1a1f654c','url':'manifest.json'},{'revision':'6b09bfaf0fe3b7a05579d6507effca13','url':'preview/index.html'},{'revision':'c4fa7f1cb8eb8938e59415c90a943acd','url':'preview/preview-frame.html'}]),function(e){const t=y();b(new PrecacheRoute_PrecacheRoute(t,e))}(R)}]);